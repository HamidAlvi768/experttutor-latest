<?php
use yii\helpers\Html;
use yii\helpers\Url;
use yii\bootstrap5\Modal;
?>

<div class="container py-5">
    <h2 class="mb-4 text-center">Choose Your Membership</h2>

    <!-- Subscription Overview -->
    <div class="card shadow-sm rounded-3 mb-5">
        <div class="card-header bg-primary text-white">
            <h4 class="mb-0">Premium Subscription</h4>
            <!-- <small class="text-white">Rank higher to get more student queries <a href="#" class="text-white text-decoration-underline">Read more</a></small> -->
        </div>
        <div class="card-body">
            <p class="mb-2">Current subscription: <strong><?= Html::encode(isset($totalCoins) ? $totalCoins : 0) ?> coins/month</strong> 
                <a href="#" class="text-primary float-end cancel-all">Cancel all</a></p>
            <table class="table table-striped table-hover">
                <thead class="table-primary">
                    <tr>
                        <th>Location</th>
                        <th>Premium coins</th>
                        <th>Avg. rank</th>
                    </tr>
                </thead>
                <tbody>
                    <?php foreach ($locations as $loc): ?>
                        <?php
                        $location = $loc->country;
                        $membership = isset($memberships[$location]) ? $memberships[$location] : null;
                        $premiumCoins = $membership ? $membership->premium_coins : 0;
                        $rank = $membership ? $membership->rank : 'N/A';
                        $isCancelled = $membership && $membership->cancelled_from_next_month;
                        ?>
                        <tr>
                            <td><?= Html::encode($loc->country) ?></td>
                            <td class="text-success"><?= Html::encode($premiumCoins) ?> 
                                <i class="fas fa-edit text-primary edit-coins-icon" data-id="<?= $membership ? $membership->id : 0 ?>" data-coins="<?= $premiumCoins ?>" data-location="<?= Html::encode($loc->country) ?>"></i>
                                <?php if (!$isCancelled && $premiumCoins > 0): ?>
                                    <i class="fas fa-times text-danger cancel-subscription" data-id="<?= $membership ? $membership->id : 0 ?>" data-location="<?= Html::encode($loc->country) ?>" style="margin-left: 5px;"></i>
                                <?php endif; ?>
                                <?php if ($isCancelled): ?>
                                    <span class="text-danger" style="margin-left: 5px;">(Cancelled from Next Month)</span>
                                <?php endif; ?>
                            </td>
                            <td><?= $rank ?></td>
                        </tr>
                    <?php endforeach; ?>
                </tbody>
            </table>
        </div>
    </div>

<!-- Modal for Rank Check/Subscription -->
<div class="modal fade" id="coinsModal" tabindex="-1" aria-labelledby="coinsModalLabel" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="coinsModalLabel">Online rank for <span id="modalLocation"></span></h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p id="subscriptionStatus"></p>
                <p>Enter coins for monthly premium subscription to see your Average rank when students search for a tutor.</p>
                <div class="mb-3">
                    <label for="coinsInput" class="form-label">Coins/month</label>
                    <input type="number" class="form-control" id="coinsInput" value="0" min="0">
                    <input type="hidden" id="membershipIdInput" name="membership_id">
                    <input type="hidden" id="locationInput" name="location">
                    <input type="hidden" id="actionType" name="action_type">
                </div>
                <button type="button" class="btn btn-sm btn-info" id="checkRank">Check Rank</button>
                <button type="button" class="btn btn-sm btn-secondary" id="resetRank">Reset</button>
                <p id="rankResult" class="mt-3"></p>
                <table class="table table-borderless mt-3" id="rankTable" style="display:none;">
                    <tbody>
                        <tr>
                            <td><span id="modalLocation2"></span></td>
                            <td>Online rank</td>
                            <td id="onlineRank">N/A</td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-sm btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-sm btn-success" id="saveCoins" style="display:none;">Subscribe</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal for Cancellation -->
<div class="modal fade" id="cancelModal" tabindex="-1" aria-labelledby="cancelModalLabel" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="cancelModalLabel">Cancel Subscription for <span id="cancelLocation"></span></h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p id="cancelStatus">Are you sure you want to cancel your subscription for this location?</p>
                <p>Your subscription will continue at the current rate for Current Month. It will not renew in Next Month.</p>
                <input type="hidden" id="cancelMembershipIdInput" name="membership_id">
                <input type="hidden" id="cancelLocationInput" name="location">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-sm btn-secondary" data-bs-dismiss="modal">No, Keep Subscription</button>
                <button type="button" class="btn btn-sm btn-danger" id="confirmCancel">Yes, Cancel Subscription</button>
            </div>
        </div>
    </div>
</div>
</div>

<style>
    .edit-coins-icon {
        cursor: pointer;
        margin-left: 5px;
    }
    #rankResult.text-success, #rankResult.text-danger {
        font-weight: bold;
    }
    #rankTable td {
        padding: 5px;
        border-top: none;
    }
    #rankTable td:last-child {
        text-align: right;
    }
    .swal2-popup {
        font-size: 16px;
    }
    .cancel-subscription {
        cursor: pointer;
    }
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
    var editButtons = document.querySelectorAll('.edit-coins-icon');
    var cancelButtons = document.querySelectorAll('.cancel-subscription');
    var cancelAllButton = document.querySelector('.cancel-all');
    var coinsModal = new bootstrap.Modal(document.getElementById('coinsModal'));
    var cancelModal = new bootstrap.Modal(document.getElementById('cancelModal'));
    var coinsInput = document.getElementById('coinsInput');
    var membershipIdInput = document.getElementById('membershipIdInput');
    var locationInput = document.getElementById('locationInput');
    var actionTypeInput = document.getElementById('actionType');
    var modalLocation = document.getElementById('modalLocation');
    var modalLocation2 = document.getElementById('modalLocation2');
    var subscriptionStatus = document.getElementById('subscriptionStatus');
    var checkRankBtn = document.getElementById('checkRank');
    var saveCoinsBtn = document.getElementById('saveCoins');
    var resetRankBtn = document.getElementById('resetRank');
    var rankResult = document.getElementById('rankResult');
    var rankTable = document.getElementById('rankTable');
    var onlineRank = document.getElementById('onlineRank');
    var cancelMembershipIdInput = document.getElementById('cancelMembershipIdInput');
    var cancelLocationInput = document.getElementById('cancelLocationInput');
    var cancelLocation = document.getElementById('cancelLocation');
    var confirmCancelBtn = document.getElementById('confirmCancel');

    editButtons.forEach(function(button) {
        button.addEventListener('click', function() {
            var membershipId = this.getAttribute('data-id');
            var currentCoins = this.getAttribute('data-coins');
            var location = this.getAttribute('data-location');
            coinsInput.value = currentCoins;
            membershipIdInput.value = membershipId;
            locationInput.value = location;
            actionTypeInput.value = 'update';
            modalLocation.textContent = location;
            modalLocation2.textContent = location;
            subscriptionStatus.textContent = `Current subscription: ${currentCoins} coins/month`;
            rankResult.textContent = '';
            rankTable.style.display = 'none';
            saveCoinsBtn.style.display = 'inline-block';
            coinsModal.show();
        });
    });

    cancelButtons.forEach(function(button) {
        button.addEventListener('click', function() {
            var membershipId = this.getAttribute('data-id');
            var location = this.getAttribute('data-location');
            cancelMembershipIdInput.value = membershipId;
            cancelLocationInput.value = location;
            cancelLocation.textContent = location;
            cancelModal.show();
        });
    });

    cancelAllButton.addEventListener('click', function(e) {
        e.preventDefault();
        Swal.fire({
            title: 'Confirm Cancel All',
            text: 'Are you sure you want to cancel all subscriptions? They will not renew from Next Month.',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes, cancel all',
            cancelButtonText: 'No, keep them'
        }).then((result) => {
            if (result.isConfirmed) {
                fetch('<?= Url::to(['tutor/cancel-all-memberships']) ?>', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                        'X-CSRF-Token': '<?= Yii::$app->request->csrfToken ?>'
                    }
                }).then(response => response.json()).then(data => {
                    if (data.success) {
                        Swal.fire('Success', 'All subscriptions cancelled from Next Month.', 'success').then(() => {
                            location.reload();
                        });
                    } else {
                        Swal.fire('Error', 'Failed to cancel subscriptions.', 'error');
                    }
                });
            }
        });
    });

    checkRankBtn.addEventListener('click', function() {
        var coins = coinsInput.value;
        var location = locationInput.value;
        if (coins >= 1 && location) {
            fetch('<?= Url::to(['tutor/buy-membership']) ?>', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                    'X-CSRF-Token': '<?= Yii::$app->request->csrfToken ?>'
                },
                body: 'location=' + encodeURIComponent(location) + '&coins=' + encodeURIComponent(coins) + '&check_rank=1'
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    var rank = data.rank || 'N/A';
                    rankResult.textContent = '';
                    rankTable.style.display = 'table';
                    onlineRank.textContent = rank;
                    saveCoinsBtn.style.display = 'inline-block';
                    rankResult.classList.remove('text-danger');
                } else {
                    rankResult.textContent = 'Error calculating rank.';
                    rankResult.classList.add('text-danger');
                    rankTable.style.display = 'none';
                    saveCoinsBtn.style.display = 'none';
                }
            })
            .catch(error => {
                rankResult.textContent = 'Error calculating rank.';
                rankResult.classList.add('text-danger');
                rankTable.style.display = 'none';
                saveCoinsBtn.style.display = 'none';
            });
        } else {
            rankResult.textContent = 'Please enter a valid number of coins.';
            rankResult.classList.add('text-danger');
            rankTable.style.display = 'none';
            saveCoinsBtn.style.display = 'none';
        }
    });

    resetRankBtn.addEventListener('click', function() {
        coinsInput.value = 0;
        rankResult.textContent = '';
        rankTable.style.display = 'none';
        saveCoinsBtn.style.display = 'none';
        subscriptionStatus.textContent = '';
    });

    saveCoinsBtn.addEventListener('click', function() {
        var coins = coinsInput.value;
        var membershipId = membershipIdInput.value;
        var location = locationInput.value;
        var actionType = actionTypeInput.value;
        if (coins >= 0 && location) {
            fetch('<?= Url::to(['tutor/buy-membership']) ?>', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                    'X-CSRF-Token': '<?= Yii::$app->request->csrfToken ?>'
                },
                body: 'membership_id=' + encodeURIComponent(membershipId) + '&coins=' + encodeURIComponent(coins) + '&location=' + encodeURIComponent(location) + '&action_type=' + encodeURIComponent(actionType)
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Success',
                        text: 'Subscription updated successfully!',
                        confirmButtonText: 'OK'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            coinsModal.hide();
                            //location.reload();
                            window.location.reload();
                        }
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: data.message || 'Failed to update subscription.',
                        confirmButtonText: 'OK'
                    });
                }
            })
            .catch(error => {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'An error occurred.',
                    confirmButtonText: 'OK'
                });
            });
        } else {
            Swal.fire({
                icon: 'warning',
                title: 'Invalid Input',
                text: 'Please enter a valid number of coins.',
                confirmButtonText: 'OK'
            });
        }
    });

    confirmCancelBtn.addEventListener('click', function() {
        var membershipId = cancelMembershipIdInput.value;
        var location = cancelLocationInput.value;
        if (membershipId && location) {
            fetch('<?= Url::to(['tutor/buy-membership']) ?>', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                    'X-CSRF-Token': '<?= Yii::$app->request->csrfToken ?>'
                },
                body: 'membership_id=' + encodeURIComponent(membershipId) + '&location=' + encodeURIComponent(location) + '&action_type=cancel'
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Success',
                        text: 'Subscription cancelled from Next Month.',
                        confirmButtonText: 'OK'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            cancelModal.hide();
                            //location.reload();
                            window.location.reload();
                        }
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: data.message || 'Failed to cancel subscription.',
                        confirmButtonText: 'OK'
                    });
                }
            })
            .catch(error => {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'An error occurred.',
                    confirmButtonText: 'OK'
                });
            });
        }
    });
});
</script>