<?php

namespace app\controllers\api;

use Yii;
use yii\rest\Controller;
use yii\web\Response;
use yii\web\NotFoundHttpException;
use yii\filters\ContentNegotiator;
use yii\filters\VerbFilter;
use app\models\Coins;

/**
 * API CoinsController handles CRUD operations for Coins via REST API.
 */
class WalletController extends Controller
{
    /**
     * Set response format to JSON and define allowed HTTP verbs.
     */
    public function behaviors()
    {
        return [
            'contentNegotiator' => [
                'class' => ContentNegotiator::class,
                'formats' => [
                    'application/json' => Response::FORMAT_JSON,
                ],
            ],
            'verbs' => [
                'class' => VerbFilter::class,
                'actions' => [
                    'index' => ['GET'],
                    'view' => ['GET'],
                    'create' => ['POST'],
                    'update' => ['POST', 'PUT', 'PATCH'],
                    'delete' => ['POST', 'DELETE'],
                ],
            ],
        ];
    }

    /**
     * List all coins.
     * @return array
     */
    public function actionIndex()
    {
        return Coins::find()->all();
    }

    /**
     * View a single coin by ID.
     * @param int $id
     * @return Coins
     * @throws NotFoundHttpException
     */
    public function actionView($id)
    {
        return $this->findModel($id);
    }

    /**
     * Create a new coin.
     * @return array
     */
    public function actionCreate()
    {
        $model = new Coins();
        $model->load(Yii::$app->request->post(), '');

        if ($model->save()) {
            return [
                'success' => true,
                'data' => $model,
            ];
        }

        return [
            'success' => false,
            'errors' => $model->getErrors(),
        ];
    }

    /**
     * Update an existing coin.
     * @param int $id
     * @return array
     * @throws NotFoundHttpException
     */
    public function actionUpdate($id)
    {
        $model = $this->findModel($id);
        $model->load(Yii::$app->request->post(), '');

        if ($model->save()) {
            return [
                'success' => true,
                'data' => $model,
            ];
        }

        return [
            'success' => false,
            'errors' => $model->getErrors(),
        ];
    }

    /**
     * Delete a coin.
     * @param int $id
     * @return array
     * @throws NotFoundHttpException
     */
    public function actionDelete($id)
    {
        $model = $this->findModel($id);

        if ($model->delete()) {
            return ['success' => true];
        }

        return [
            'success' => false,
            'message' => 'Delete failed.',
        ];
    }

    /**
     * Finds a Coins model by ID.
     * @param int $id
     * @return Coins
     * @throws NotFoundHttpException
     */
    protected function findModel($id)
    {
        if (($model = Coins::findOne($id)) !== null) {
            return $model;
        }

        throw new NotFoundHttpException("The requested coin with ID $id does not exist.");
    }
}
